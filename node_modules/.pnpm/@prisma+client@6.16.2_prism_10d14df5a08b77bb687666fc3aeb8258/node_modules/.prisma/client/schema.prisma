generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  email         String?        @unique
  password      String? // null for OAuth-only users
  username      String?        @unique
  name          String?
  avatar        String?
  provider      AuthProvider? // "LOCAL", "GOOGLE", "FACEBOOK"
  providerId    String?        @unique // id from provider if OAuth
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  profile       Profile?
  exercises     Exercise[]     @relation("authorExercises")
  refreshTokens RefreshToken[]
}

model Profile {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
  bio       String?
  heightCm  Int?
  weightKg  Float?
  gender    String?
  goals     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Exercise {
  id          String   @id @default(uuid())
  author      User     @relation(fields: [authorId], references: [id], name: "authorExercises")
  authorId    String
  title       String
  description String?
  difficulty  String // e.g., Beginner/Intermediate/Advanced
  muscleGroup String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  revoked   Boolean  @default(false)
  createdAt DateTime @default(now())
  expiresAt DateTime
}

enum AuthProvider {
  LOCAL
  GOOGLE
  FACEBOOK
}
